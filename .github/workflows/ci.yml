name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read  # to fetch code (actions/checkout)

jobs:
  ci:
    strategy:
      # Allows for matrix sub-jobs to fail without canceling the rest
      fail-fast: false

      matrix:
        os:
          - "ubuntu-latest"
          - "macos-latest"
        # Test with the earliest and latest supported versions of Python, lxml, and libxmlsec1
        # so that we get reasonable coverage of the supported versions.
        python-version:
          - "3.7"
          - "3.12"
        lxml-version:
          - "5.0.0"
          - "5.1.0"
        libxmlsec1-version:
          - "1.3.3"
          - "1.2.39"

        exclude:
          # LXML did not upload a wheel for Python 3.7 so we can't test
          # this configuration.
          - os: "macos-latest"
            python-version: "3.7"
            lxml-version: "5.0.0"

    env:
      PYXMLSEC_STATIC_DEPS: "true"
      PYXMLSEC_LIBXML2_VERSION: "2.12.3"
      PYXMLSEC_LIBXSLT_VERSION: "1.1.39"

    # This defaults to 360 minutes (6h) which is way too long and if a test gets stuck, it can block other pipelines.
    # From testing, the runs tend to take 3-8 minutes, so a limit of 30 minutes should be enough.
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.1.1

      - name: Setup Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache libs
        uses: actions/cache@v4.0.0
        with:
          path: libs/*.tar.gz
          key: >
            libs-
            ${{ matrix.os }}-
            ${{ env.PYXMLSEC_LIBXML2_VERSION }}-
            ${{ env.PYXMLSEC_LIBXSLT_VERSION }}-
            ${{ matrix.libxmlsec1-version }}

      - name: Install build dependencies
        run: pip install --upgrade pip setuptools wheel build

      - name: Build wheel
        run: |
          python -m build
          rm -rf build/
        env:
          PYXMLSEC_XMLSEC1_VERSION: ${{ matrix.libxmlsec1-version }}

      - name: Install test dependencies
        run: |
          pip install --only-binary=lxml --upgrade -r requirements-test.txt lxml==${{ matrix.lxml-version }}
          pip install xmlsec --only-binary=xmlsec --no-index --find-links=dist/

      - name: Run tests
        run: |
          pytest -v --color=yes
